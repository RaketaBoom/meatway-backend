plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springBootDependencyManagementVersion}"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of("${javaVersion}")
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    // implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "io.micrometer:micrometer-registry-prometheus:${micrometerVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.flywaydb:flyway-core:${flywayVersion}"
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly "org.flywaydb:flyway-database-postgresql:${flywayVersion}"



    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${swaggerVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-api:${swaggerVersion}"
}

tasks.named('test') {
    useJUnitPlatform()
}
